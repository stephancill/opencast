generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cast {
  id                 BigInt    @id @default(autoincrement())
  created_at         DateTime  @default(now()) @db.Timestamp(6)
  updated_at         DateTime  @default(now()) @db.Timestamp(6)
  deleted_at         DateTime? @db.Timestamp(6)
  timestamp          DateTime  @db.Timestamp(6)
  fid                BigInt
  hash               Bytes     @unique
  parent_hash        Bytes?
  parent_fid         BigInt?
  parent_url         String?
  text               String
  embeds             Json      @default("{}")
  mentions           BigInt[]  @default([])
  mentions_positions Int[]     @default([]) @db.SmallInt
  message            Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "cast_hash_foreign")

  @@index([fid, timestamp], map: "cast_fid_timestamp_index")
  @@index([timestamp], map: "cast_timestamp_index")
}

model Fid {
  fid             BigInt   @id
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  custody_address Bytes
}

model Link {
  id                BigInt    @id @default(autoincrement())
  fid               BigInt?
  target_fid        BigInt?
  hash              Bytes     @unique
  timestamp         DateTime  @db.Timestamp(6)
  created_at        DateTime  @default(now()) @db.Timestamp(6)
  updated_at        DateTime  @default(now()) @db.Timestamp(6)
  deleted_at        DateTime? @db.Timestamp(6)
  type              String?
  display_timestamp DateTime? @db.Timestamp(6)

  @@unique([fid, target_fid, type])
}

model Message {
  id               BigInt         @id @default(autoincrement())
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  deleted_at       DateTime?      @db.Timestamp(6)
  pruned_at        DateTime?      @db.Timestamp(6)
  revoked_at       DateTime?      @db.Timestamp(6)
  timestamp        DateTime       @db.Timestamp(6)
  message_type     Int            @db.SmallInt
  fid              BigInt
  hash             Bytes          @unique
  hash_scheme      Int            @db.SmallInt
  signature        Bytes
  signature_scheme Int            @db.SmallInt
  signer           Bytes
  raw              Bytes
  cast             Cast?
  reaction         Reaction?
  user             User?
  verification     Verification?

  @@index([timestamp], map: "messages_timestamp_index")
}

model Reaction {
  id            BigInt    @id @default(autoincrement())
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  deleted_at    DateTime? @db.Timestamp(6)
  timestamp     DateTime  @db.Timestamp(6)
  reaction_type Int       @db.SmallInt
  fid           BigInt
  hash          Bytes     @unique
  target_hash   Bytes?
  target_fid    BigInt?
  target_url    String?
  message       Message @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "reaction_hash_foreign")

  @@index([fid, timestamp], map: "reaction_fid_timestamp_index")
}

model Signer {
  id              BigInt    @id @default(autoincrement())
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  deleted_at      DateTime? @db.Timestamp(6)
  timestamp       DateTime  @db.Timestamp(6)
  fid             BigInt
  hash            Bytes?
  custody_address Bytes?
  signer          Bytes
  name            String?

  @@index([fid, timestamp])
}

model User {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  hash       Bytes     @unique
  type       Int       @db.SmallInt
  value      String
  message    Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "user_hash_foreign")

  @@unique([fid, type])
  @@index([fid])
}

model Verification {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  deleted_at DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  hash       Bytes     @unique
  claim      Json
  message    Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "verification_hash_foreign")

  @@index([fid, timestamp], map: "verification_fid_timestamp_index")
}