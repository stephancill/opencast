generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Cast {
  id                  BigInt    @id @default(autoincrement())
  createdAt           DateTime  @default(now()) @db.Timestamp(6)
  updatedAt           DateTime  @default(now()) @db.Timestamp(6)
  deletedAt           DateTime? @db.Timestamp(6)
  timestamp           DateTime  @db.Timestamp(6)
  fid                 BigInt
  hash                Bytes     @unique
  parentHash          Bytes?
  parentFid           BigInt?
  parentUrl           String?
  text                String
  embeds              Json      @default("{}")
  mentions            BigInt[]  @default([])
  mentionsPositions   Int[]     @default([]) @db.SmallInt
  message             Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "cast_hash_foreign")

  @@index([fid, timestamp], map: "cast_fid_timestamp_index")
  @@index([timestamp], map: "cast_timestamp_index")
}

model Fid {
  fid             BigInt   @id
  createdAt       DateTime @default(now()) @db.Timestamp(6)
  updatedAt       DateTime @default(now()) @db.Timestamp(6)
  custodyAddress  Bytes
}

model Link {
  id                BigInt    @id @default(autoincrement())
  fid               BigInt?
  targetFid         BigInt?
  hash              Bytes     @unique
  timestamp         DateTime  @db.Timestamp(6)
  createdAt         DateTime  @default(now()) @db.Timestamp(6)
  updatedAt         DateTime  @default(now()) @db.Timestamp(6)
  deletedAt         DateTime? @db.Timestamp(6)
  type              String?
  displayTimestamp  DateTime? @db.Timestamp(6)

  @@unique([fid, targetFid, type])
}

model Message {
  id                BigInt         @id @default(autoincrement())
  createdAt         DateTime       @default(now()) @db.Timestamp(6)
  updatedAt         DateTime       @default(now()) @db.Timestamp(6)
  deletedAt         DateTime?      @db.Timestamp(6)
  prunedAt          DateTime?      @db.Timestamp(6)
  revokedAt         DateTime?      @db.Timestamp(6)
  timestamp         DateTime       @db.Timestamp(6)
  messageType       Int            @db.SmallInt
  fid               BigInt
  hash              Bytes          @unique
  hashScheme        Int            @db.SmallInt
  signature         Bytes
  signatureScheme   Int            @db.SmallInt
  signer            Bytes
  raw               Bytes
  cast              Cast?
  reaction          Reaction?
  user              User?
  verification      Verification?

  @@index([timestamp], map: "messages_timestamp_index")
}

model Reaction {
  id            BigInt    @id @default(autoincrement())
  createdAt     DateTime  @default(now()) @db.Timestamp(6)
  updatedAt     DateTime  @default(now()) @db.Timestamp(6)
  deletedAt     DateTime? @db.Timestamp(6)
  timestamp     DateTime  @db.Timestamp(6)
  reactionType  Int       @db.SmallInt
  fid           BigInt
  hash          Bytes     @unique
  targetHash    Bytes?
  targetFid     BigInt?
  targetUrl     String?
  message       Message @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "reaction_hash_foreign")

  @@index([fid, timestamp], map: "reaction_fid_timestamp_index")
}

model Signer {
  id              BigInt    @id @default(autoincrement())
  createdAt       DateTime  @default(now()) @db.Timestamp(6)
  updatedAt       DateTime  @default(now()) @db.Timestamp(6)
  deletedAt       DateTime? @db.Timestamp(6)
  timestamp       DateTime  @db.Timestamp(6)
  fid             BigInt
  hash            Bytes?
  custodyAddress  Bytes?
  signer          Bytes
  name            String?

  @@index([fid, timestamp])
}

model User {
  id         BigInt    @id @default(autoincrement())
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt  DateTime  @default(now()) @db.Timestamp(6)
  deletedAt  DateTime? @db.Timestamp(6)
  timestamp  DateTime  @db.Timestamp(6)
  fid        BigInt
  hash       Bytes     @unique
  type       Int       @db.SmallInt
  value      String
  message    Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "user_hash_foreign")

  @@unique([fid, type])
  @@index([fid])
}

model Verification {
  id          BigInt    @id @default(autoincrement())
  createdAt   DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime  @default(now()) @db.Timestamp(6)
  deletedAt   DateTime? @db.Timestamp(6)
  timestamp   DateTime  @db.Timestamp(6)
  fid         BigInt
  hash        Bytes     @unique
  claim       Json
  message     Message  @relation(fields: [hash], references: [hash], onDelete: NoAction, onUpdate: NoAction, map: "verification_hash_foreign")

  @@index([fid, timestamp], map: "verification_fid_timestamp_index")
}